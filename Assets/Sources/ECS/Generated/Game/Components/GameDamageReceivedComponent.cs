//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DamageReceived damageReceived { get { return (DamageReceived)GetComponent(GameComponentsLookup.DamageReceived); } }
    public bool hasDamageReceived { get { return HasComponent(GameComponentsLookup.DamageReceived); } }

    public void AddDamageReceived(int newValue) {
        var index = GameComponentsLookup.DamageReceived;
        var component = (DamageReceived)CreateComponent(index, typeof(DamageReceived));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDamageReceived(int newValue) {
        var index = GameComponentsLookup.DamageReceived;
        var component = (DamageReceived)CreateComponent(index, typeof(DamageReceived));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDamageReceived() {
        RemoveComponent(GameComponentsLookup.DamageReceived);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDamageReceived;

    public static Entitas.IMatcher<GameEntity> DamageReceived {
        get {
            if (_matcherDamageReceived == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DamageReceived);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDamageReceived = matcher;
            }

            return _matcherDamageReceived;
        }
    }
}
