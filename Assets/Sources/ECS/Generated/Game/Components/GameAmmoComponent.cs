//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Ammo ammo { get { return (Ammo)GetComponent(GameComponentsLookup.Ammo); } }
    public bool hasAmmo { get { return HasComponent(GameComponentsLookup.Ammo); } }

    public void AddAmmo(int newValue) {
        var index = GameComponentsLookup.Ammo;
        var component = (Ammo)CreateComponent(index, typeof(Ammo));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAmmo(int newValue) {
        var index = GameComponentsLookup.Ammo;
        var component = (Ammo)CreateComponent(index, typeof(Ammo));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAmmo() {
        RemoveComponent(GameComponentsLookup.Ammo);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAmmo;

    public static Entitas.IMatcher<GameEntity> Ammo {
        get {
            if (_matcherAmmo == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Ammo);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAmmo = matcher;
            }

            return _matcherAmmo;
        }
    }
}
