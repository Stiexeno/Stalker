//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DurationLeft durationLeft { get { return (DurationLeft)GetComponent(GameComponentsLookup.DurationLeft); } }
    public bool hasDurationLeft { get { return HasComponent(GameComponentsLookup.DurationLeft); } }

    public void AddDurationLeft(float newValue) {
        var index = GameComponentsLookup.DurationLeft;
        var component = (DurationLeft)CreateComponent(index, typeof(DurationLeft));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDurationLeft(float newValue) {
        var index = GameComponentsLookup.DurationLeft;
        var component = (DurationLeft)CreateComponent(index, typeof(DurationLeft));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDurationLeft() {
        RemoveComponent(GameComponentsLookup.DurationLeft);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDurationLeft;

    public static Entitas.IMatcher<GameEntity> DurationLeft {
        get {
            if (_matcherDurationLeft == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DurationLeft);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDurationLeft = matcher;
            }

            return _matcherDurationLeft;
        }
    }
}
