//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ShotListenerComponent shotListener { get { return (ShotListenerComponent)GetComponent(GameComponentsLookup.ShotListener); } }
    public bool hasShotListener { get { return HasComponent(GameComponentsLookup.ShotListener); } }

    public void AddShotListener(System.Collections.Generic.List<IShotListener> newValue) {
        var index = GameComponentsLookup.ShotListener;
        var component = (ShotListenerComponent)CreateComponent(index, typeof(ShotListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceShotListener(System.Collections.Generic.List<IShotListener> newValue) {
        var index = GameComponentsLookup.ShotListener;
        var component = (ShotListenerComponent)CreateComponent(index, typeof(ShotListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveShotListener() {
        RemoveComponent(GameComponentsLookup.ShotListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShotListener;

    public static Entitas.IMatcher<GameEntity> ShotListener {
        get {
            if (_matcherShotListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ShotListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShotListener = matcher;
            }

            return _matcherShotListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddShotListener(IShotListener value) {
        var listeners = hasShotListener
            ? shotListener.value
            : new System.Collections.Generic.List<IShotListener>();
        listeners.Add(value);
        ReplaceShotListener(listeners);
    }

    public void RemoveShotListener(IShotListener value, bool removeComponentWhenEmpty = true) {
        var listeners = shotListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveShotListener();
        } else {
            ReplaceShotListener(listeners);
        }
    }
}
