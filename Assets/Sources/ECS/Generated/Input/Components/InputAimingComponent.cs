//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity aimingEntity { get { return GetGroup(InputMatcher.Aiming).GetSingleEntity(); } }
    public Aiming aiming { get { return aimingEntity.aiming; } }
    public bool hasAiming { get { return aimingEntity != null; } }

    public InputEntity SetAiming(UnityEngine.Vector2 newValue) {
        if (hasAiming) {
            throw new Entitas.EntitasException("Could not set Aiming!\n" + this + " already has an entity with Aiming!",
                "You should check if the context already has a aimingEntity before setting it or use context.ReplaceAiming().");
        }
        var entity = CreateEntity();
        entity.AddAiming(newValue);
        return entity;
    }

    public void ReplaceAiming(UnityEngine.Vector2 newValue) {
        var entity = aimingEntity;
        if (entity == null) {
            entity = SetAiming(newValue);
        } else {
            entity.ReplaceAiming(newValue);
        }
    }

    public void RemoveAiming() {
        aimingEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Aiming aiming { get { return (Aiming)GetComponent(InputComponentsLookup.Aiming); } }
    public bool hasAiming { get { return HasComponent(InputComponentsLookup.Aiming); } }

    public void AddAiming(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.Aiming;
        var component = (Aiming)CreateComponent(index, typeof(Aiming));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAiming(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.Aiming;
        var component = (Aiming)CreateComponent(index, typeof(Aiming));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAiming() {
        RemoveComponent(InputComponentsLookup.Aiming);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherAiming;

    public static Entitas.IMatcher<InputEntity> Aiming {
        get {
            if (_matcherAiming == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.Aiming);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherAiming = matcher;
            }

            return _matcherAiming;
        }
    }
}
